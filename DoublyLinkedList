//Abdullah Waheed
//C++ code for doubly linked list
#include <iostream>
using namespace std;

class DllNode{
  public:
  int data;
  DllNode* prev;
  DllNode* next;
  DllNode(int data){
    this->data=data;
    prev=nullptr;
    next=nullptr;
  }
};
DllNode* head=nullptr;
class LinkedList{
  public:
  void insert_at_begining(int data){
    DllNode* node = new DllNode(data);
    if(head==nullptr){
      node->prev=nullptr;
      node->next=nullptr;
      head=node;
    }
    else{
      node->data=data;
      node->next=head;
      node->prev=nullptr;
      head=node;
    }
  }
   void insert_at_end(int data){
    
     DllNode* p=head;
     DllNode* node = new DllNode(data);
     while(p->next!=nullptr){
       p=p->next;
     }
     p->next=node;
     node->prev=p;
   }
   void insert_at_any_position(int data,int position){
     DllNode* p=head;
     DllNode* q=head;
     DllNode* node=new DllNode(data);
     for(int i=0;i<position-1;i++){
       p=p->next;
       q=q->next->next;
     }
     p->next=node;
     node->prev=p;
     node->next=q;
     q->prev=node;

   }
   
   void deleteNode(int position){
     DllNode* p=head;
     DllNode* q=head;
     for(int i=1; i<position-1;i++){
       p=p->next;
       q=p->next->next;
     }
     p->next=q;
     q->prev=p;

   }
    void display(DllNode* head){
      while(head!=nullptr){
        cout<<head->data<<"->";
        cout<<"<-";
        head=head->next;
      }
      cout<<endl;
    }
    

};

int main() {
  LinkedList dll;
  dll.insert_at_begining(5);
  dll.insert_at_begining(4);
  dll.insert_at_begining(3);
  dll.insert_at_begining(2);
  dll.insert_at_begining(1);
  dll.insert_at_end(6);
  dll.insert_at_end(7);
  dll.insert_at_end(8);
  dll.display(head);
  dll.deleteNode(3);
  dll.display(head);


  return 0;


}
